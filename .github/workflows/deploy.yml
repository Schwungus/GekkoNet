name: Build and Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: Build ${{ matrix.platform }} (${{ matrix.build_type }}, ${{ matrix.asio }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [static, shared]
        asio: [with_asio, no_asio]
        include:
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Configure
        shell: bash
        run: cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=${{ matrix.build_type == 'shared' && 'ON' || 'OFF' }} -DNO_ASIO_BUILD=${{ matrix.asio == 'no_asio' && 'ON' || 'OFF' }}
      
      - name: Build
        shell: bash
        run: cmake --build build

      - name: Package
        shell: bash
        run: |
          mkdir -p package/${{ matrix.platform }}/{lib,include}
          
          find build/GekkoLib -name "*.lib" -o -name "*.a" -o -name "*.so" -o -name "*.dll" -o -name "*.dylib" \
            -exec cp {} package/${{ matrix.platform }}/lib/ \;
          
          cp -r GekkoLib/include/* package/${{ matrix.platform }}/include/
          
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.asio }}
          path: package/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create packages
        shell: bash
        run: |
          version="$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          
          for platform in windows linux macos; do
            mkdir -p "GekkoNet-$platform"
            for variant in static-with_asio static-no_asio shared-with_asio shared-no_asio; do
              if [ -d "artifacts/${platform}-${variant}/$platform" ]; then
                cp -r "artifacts/${platform}-${variant}/$platform"/* "GekkoNet-$platform/" 2>/dev/null || true
              fi
            done
            if [ "$(find "GekkoNet-$platform" -type f | wc -l)" -gt 0 ]; then
              tar -czf "GekkoNet-$platform-Release.tar.gz" "GekkoNet-$platform"
            fi
          done
      
      - name: Release
        shell: bash
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)
          files: GekkoNet-*-Release.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Documentation
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Doxygen
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      - name: Build docs
        shell: bash
        run: |
          cmake -B build -DBUILD_DOCS=ON
          cmake --build build --target docs

      - name: Upload docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/GekkoLib/docs/html
          
      - name: Deploy
        uses: actions/deploy-pages@v4
